services:
  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - ~/.pg/pg_data/online_shop:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - custom

  redis:
    image: redis
    restart: always
    networks:
      - custom

  app:
    build:
      context: .
    working_dir: /app/online_shop
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/online_shop/static
      - media_volume:/app/online_shop/media
    command: >
      bash -c "python3 manage.py collectstatic --noinput &&
      python3 manage.py migrate &&
      python3 manage.py loaddata fixtures/commerce_category.json &&
      python3 manage.py loaddata fixtures/commerce_subcategory.json &&
      python3 manage.py loaddata fixtures/commerce_product.json &&
      python3 manage.py loaddata fixtures/commerce_sizeandnumber.json &&
      python3 manage.py loaddata fixtures/users_user.json &&
      gunicorn -b 0.0.0.0:8000 online_shop.wsgi:application"
    networks:
      - custom

  worker:
    restart: always
    depends_on:
      - redis
      - app
    build:
      context: .
    networks:
      - custom
    command: [ "celery", "--workdir=./online_shop", "-A", "online_shop", "worker"]

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./online_shop/docker/nginx
    restart: always
    volumes:
      - static_volume:/app/online_shop/static
      - media_volume:/app/online_shop/media
    depends_on:
      - app
    ports:
      - "80:80"
    networks:
      - custom


volumes:
  static_volume:
  media_volume:

networks:
  custom:
    driver: bridge
